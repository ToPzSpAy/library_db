// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using library_db.Data;

namespace library_db.Migrations
{
    [DbContext(typeof(libraryContext))]
    partial class libraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("library_db.Models.Бригады", b =>
                {
                    b.Property<int>("КодБригады")
                        .HasColumnName("Код_бригады")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника1")
                        .HasColumnName("Код_сотрудника_1")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника2")
                        .HasColumnName("Код_сотрудника_2")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника3")
                        .HasColumnName("Код_сотрудника_3")
                        .HasColumnType("INT");

                    b.HasKey("КодБригады");

                    b.HasIndex("КодСотрудника2")
                        .IsUnique();

                    b.HasIndex("КодСотрудника3")
                        .IsUnique();

                    b.ToTable("Бригады");
                });

            modelBuilder.Entity("library_db.Models.ВидыРабот", b =>
                {
                    b.Property<int>("КодВида")
                        .HasColumnName("Код_вида")
                        .HasColumnType("INT");

                    b.Property<int>("КодМатериала1")
                        .HasColumnName("Код_материала_1")
                        .HasColumnType("INT");

                    b.Property<int>("КодМатериала2")
                        .HasColumnName("Код_материала_2")
                        .HasColumnType("INT");

                    b.Property<int>("КодМатериала3")
                        .HasColumnName("Код_материала_3")
                        .HasColumnType("INT");

                    b.Property<int>("Наименование")
                        .HasColumnType("INT");

                    b.Property<int>("Описание")
                        .HasColumnType("INT");

                    b.Property<int>("ЦенаРаботы")
                        .HasColumnName("Цена_работы")
                        .HasColumnType("INT");

                    b.HasKey("КодВида");

                    b.HasIndex("КодМатериала2")
                        .IsUnique();

                    b.HasIndex("КодМатериала3")
                        .IsUnique();

                    b.ToTable("Виды_работ");
                });

            modelBuilder.Entity("library_db.Models.Должности", b =>
                {
                    b.Property<int>("КодДолжности")
                        .HasColumnName("Код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("НаименованиеДолжности")
                        .HasColumnName("Наименование_должности")
                        .HasColumnType("INT");

                    b.Property<int>("Обязанности")
                        .HasColumnType("INT");

                    b.Property<int>("Оклад")
                        .HasColumnType("INT");

                    b.Property<int>("Требования")
                        .HasColumnType("INT");

                    b.HasKey("КодДолжности");

                    b.ToTable("Должности");
                });

            modelBuilder.Entity("library_db.Models.Заказчики", b =>
                {
                    b.Property<int>("КодЗаказчика")
                        .HasColumnName("Код_заказчика")
                        .HasColumnType("INT");

                    b.Property<int>("Адрес")
                        .HasColumnType("INT");

                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("Паспортные_данные")
                        .HasColumnType("INT");

                    b.Property<int>("Телефон")
                        .HasColumnType("INT");

                    b.Property<int>("Фио")
                        .HasColumnName("ФИО")
                        .HasColumnType("INT");

                    b.HasKey("КодЗаказчика");

                    b.ToTable("Заказчики");
                });

            modelBuilder.Entity("library_db.Models.Заказы", b =>
                {
                    b.Property<int>("ДатаНачала")
                        .HasColumnName("Дата_начала")
                        .HasColumnType("INT");

                    b.Property<int>("ДатаОкончания")
                        .HasColumnName("_Дата_окончания")
                        .HasColumnType("INT");

                    b.Property<int>("КодБригады")
                        .HasColumnName("Код_бригады")
                        .HasColumnType("INT");

                    b.Property<int>("КодВидаРабот")
                        .HasColumnName("Код_вида_работ")
                        .HasColumnType("INT");

                    b.Property<int>("КодЗаказчика")
                        .HasColumnName("Код_заказчика")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника")
                        .HasColumnName("Код_сотрудника")
                        .HasColumnType("INT");

                    b.Property<int>("ОбОплате")
                        .HasColumnName("_Об_оплате")
                        .HasColumnType("INT");

                    b.Property<int>("ОтметкаОЗавершении")
                        .HasColumnName("Отметка_о_завершении")
                        .HasColumnType("INT");

                    b.Property<int>("Стоимость")
                        .HasColumnType("INT");

                    b.HasIndex("КодБригады")
                        .IsUnique();

                    b.HasIndex("КодВидаРабот")
                        .IsUnique();

                    b.HasIndex("КодСотрудника")
                        .IsUnique();

                    b.ToTable("Заказы");
                });

            modelBuilder.Entity("library_db.Models.Материалы", b =>
                {
                    b.Property<int>("КодМатериала")
                        .HasColumnName("Код_материала")
                        .HasColumnType("INT");

                    b.Property<int>("Наименование")
                        .HasColumnType("INT");

                    b.Property<int>("Описание")
                        .HasColumnType("INT");

                    b.Property<int>("Упаковка")
                        .HasColumnType("INT");

                    b.Property<int>("Цена")
                        .HasColumnType("INT");

                    b.HasKey("КодМатериала");

                    b.ToTable("Материалы");
                });

            modelBuilder.Entity("library_db.Models.Сотрудники", b =>
                {
                    b.Property<int>("КодСотрудника")
                        .HasColumnName("Код_сотрудника")
                        .HasColumnType("INT");

                    b.Property<int>("Адрес")
                        .HasColumnType("INT");

                    b.Property<int>("Возраст")
                        .HasColumnType("INT");

                    b.Property<int>("КодДолжности")
                        .HasColumnName("Код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("Пол")
                        .HasColumnType("INT");

                    b.Property<int>("Телефон")
                        .HasColumnType("INT");

                    b.Property<int>("Фио")
                        .HasColumnName("ФИО")
                        .HasColumnType("INT");

                    b.HasKey("КодСотрудника");

                    b.HasIndex("КодДолжности")
                        .IsUnique();

                    b.ToTable("Сотрудники");
                });
#pragma warning restore 612, 618
        }
    }
}
